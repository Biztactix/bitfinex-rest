using System;
using System.Collections.Generic;
using Bitfinex.JsonConverters;
using Bitfinex.Models;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Newtonsoft.Json;

namespace Bitfinex.Tests.Models
{
    [TestClass]
    public class CandlesTests
    {
        [TestMethod]
        public void CandlesDeserializeTest1()
        {
            //GET: https://api.bitfinex.com/v2/candles/trade:1m:tBTCUSD/hist
            string json = "[ [ 1500162180000, 1995.7, 1987.2, 1995.7, 1987.2, 22.97632724 ], [ 1500162120000, 1995, 1995.7, 1997, 1994.5, 17.4851571 ], [ 1500162060000, 1999.7, 1996.86868653, 1999.7, 1995, 34.40969878 ], [ 1500162000000, 1997.9, 1999.6, 2000.4, 1997.8, 6.03225561 ], [ 1500161940000, 1996.4, 1998, 1998, 1996.2, 3.79828954 ], [ 1500161880000, 1995.6, 1995.9, 1997.8964698, 1995.4, 25.90021105 ], [ 1500161820000, 1983.6, 1994.6, 1995.72670513, 1983.6, 50.64021199 ], [ 1500161760000, 1982.8, 1983.5, 1984.9, 1980, 70.17040888 ], [ 1500161700000, 1981.5, 1981.5, 1986.3, 1980, 122.59006551 ], [ 1500161640000, 1989.9, 1981.5, 1990, 1979.1, 124.62594331 ], [ 1500161580000, 2002, 1989.9, 2002, 1985.2, 467.48905936 ], [ 1500161520000, 2005.7, 2001.9, 2006, 2001.9, 4.89232837 ], [ 1500161460000, 2007, 2005.9, 2007.6, 2005.9, 12.27400103 ], [ 1500161400000, 2011, 2007, 2011.1, 2007, 3.67709528 ], [ 1500161340000, 2016.8, 2011, 2016.8, 2011, 20.01826389 ], [ 1500161280000, 2016.8, 2016.8, 2016.9, 2016.8, 5.97632501 ], [ 1500161220000, 2020, 2017, 2020, 2016.5, 3.63460356 ], [ 1500161160000, 2019.5, 2016.62496486, 2020.4, 2016.05397415, 11.93354221 ], [ 1500161100000, 2016.1, 2019.4, 2020.9, 2016.1, 9.30303567 ], [ 1500161040000, 2018, 2019.2, 2019.5, 2015.02619089, 4.079675 ], [ 1500160980000, 2020.05090907, 2015.59718159, 2020.62189978, 2015.59718159, 17.7406763 ], [ 1500160920000, 2020.7, 2020.05090907, 2023.1, 2020, 37.96354923 ], [ 1500160860000, 2026.7, 2020.7, 2026.7, 2020.7, 17.33498322 ], [ 1500160800000, 2027.9, 2028, 2029.1, 2026, 35.88429581 ], [ 1500160740000, 2032.8, 2030, 2032.8, 2029.2, 5.13418676 ], [ 1500160680000, 2034.9, 2030.4, 2034.9, 2030.2, 6.09735201 ], [ 1500160620000, 2034.9, 2034.8, 2035, 2034.8, 2.79991912 ], [ 1500160560000, 2033.8, 2034.8, 2036, 2033.7, 29.46490015 ], [ 1500160500000, 2036.9, 2036.1, 2036.9, 2036.1, 3.8529104 ], [ 1500160440000, 2037.6, 2041.2, 2041.2, 2037.6, 1.70119642 ], [ 1500160380000, 2039.9, 2039.4, 2044.6, 2039.3, 3.1983107 ], [ 1500160320000, 2042.6, 2043.3, 2043.5, 2038.5, 10.08400001 ], [ 1500160260000, 2035.8, 2037.1, 2042.66214091, 2033.2, 6.70065163 ], [ 1500160200000, 2035.8, 2032.5, 2036, 2032.5, 9.87 ], [ 1500160140000, 2039.8, 2036.2, 2039.8, 2035.8, 8.48168178 ], [ 1500160080000, 2038.6, 2039.8, 2039.8, 2038.5, 2.97000969 ], [ 1500160020000, 2042.4, 2038.6, 2045.8, 2037.6, 0.27645094 ], [ 1500159960000, 2046.4, 2042.1, 2046.4, 2042, 3.53193462 ], [ 1500159900000, 2045.7, 2046.8, 2046.9, 2045.7, 3.26026574 ], [ 1500159840000, 2046.9, 2047.8, 2048, 2046.6, 2.53834372 ], [ 1500159780000, 2046.9, 2046.9, 2047, 2045.3, 9.43997543 ], [ 1500159720000, 2045.8, 2046.8, 2050, 2045.5, 21.04432284 ], [ 1500159660000, 2040.8, 2044.4, 2050.1, 2040.7, 99.67203311 ], [ 1500159600000, 2032, 2036.9, 2036.9, 2031.81331756, 12.02780761 ], [ 1500159540000, 2027.9, 2032, 2032.6, 2027.6, 7.1549663 ], [ 1500159480000, 2027.9, 2027.1, 2027.9, 2027.1, 0.2233022 ], [ 1500159420000, 2027.01699565, 2027.9, 2028.9, 2026.7, 2.72581875 ], [ 1500159360000, 2031.3, 2026.10341053, 2034.7, 2026.10341053, 7.68789213 ], [ 1500159300000, 2031.6, 2031.2, 2034.8, 2027.5, 7.68397458 ], [ 1500159240000, 2032.61270454, 2031.9, 2035, 2031, 4.34505748 ], [ 1500159180000, 2037, 2032.4985064, 2037, 2032.4985064, 9.84218333 ], [ 1500159120000, 2038, 2036.8, 2038.1, 2035.2, 8.0394852 ], [ 1500159060000, 2038, 2038, 2038, 2038, 0.03557219 ], [ 1500159000000, 2041.9, 2039.5, 2041.9, 2038.4, 25.13458134 ], [ 1500158940000, 2042.1, 2042, 2042.1, 2042, 4.26789531 ], [ 1500158880000, 2043.3, 2043.3, 2043.3, 2043.3, 0.03698901 ], [ 1500158820000, 2042, 2043.2, 2043.2, 2042, 0.44716155 ], [ 1500158760000, 2043.2, 2043.2, 2043.3, 2042, 0.08153407 ], [ 1500158700000, 2040.8, 2043.1, 2047, 2040.8, 7.16597568 ], [ 1500158640000, 2040.2, 2042.5, 2042.5, 2038.4, 3.540761 ], [ 1500158580000, 2044.5, 2038.5, 2044.5, 2036.1528469, 12.97337617 ], [ 1500158520000, 2046.5, 2040.83497066, 2046.5, 2040.83497066, 26.10096069 ], [ 1500158460000, 2048.1, 2046.6, 2048.1, 2046.5, 4.06512445 ], [ 1500158400000, 2051.6, 2048.1, 2051.6, 2048.1, 0.90595857 ], [ 1500158340000, 2055.2, 2053.9, 2055.2, 2053.9, 1.62993384 ], [ 1500158280000, 2059, 2055.2, 2059, 2055.2, 4.92301136 ], [ 1500158220000, 2061, 2059.9, 2061, 2059.5, 10.994915 ], [ 1500158160000, 2061.3, 2063.9, 2063.9, 2061.2, 7.07495719 ], [ 1500158100000, 2056.1, 2061.3, 2061.4, 2056.1, 6.92721002 ], [ 1500158040000, 2057.1, 2057, 2057.8, 2057, 3.53238155 ], [ 1500157980000, 2058.1, 2057.1, 2058.2, 2057.1, 0.56829621 ], [ 1500157920000, 2054.1, 2057.9, 2057.9, 2054.1, 13.56914211 ], [ 1500157860000, 2048, 2052.9, 2064, 2046.8, 75.09458677 ], [ 1500157800000, 2049.5, 2048, 2049.5, 2048, 0.51927813 ], [ 1500157740000, 2044.9, 2049.3, 2049.3, 2044.8, 6.26535979 ], [ 1500157680000, 2039.7, 2043.8, 2043.8, 2039.7, 5.3953595 ], [ 1500157620000, 2039.8, 2039.7, 2039.8, 2038.3, 4.73073907 ], [ 1500157560000, 2042.31954649, 2039.9, 2045, 2039.8, 4.10262838 ], [ 1500157500000, 2046.6, 2042.31954649, 2046.6, 2042.31954649, 2.16118793 ], [ 1500157440000, 2051, 2046.6, 2051, 2046.6, 3.20495404 ], [ 1500157380000, 2051.6, 2051.6, 2051.6, 2051.6, 0.03023163 ], [ 1500157320000, 2056.2, 2051.6, 2056.2, 2051.6, 9.14784316 ], [ 1500157260000, 2056, 2053.9, 2056.4, 2053.9, 19.1085068 ], [ 1500157200000, 2058.9, 2059.7, 2059.7, 2056, 1.2736754 ], [ 1500157140000, 2058, 2059.7, 2059.7, 2057.6, 16.09856437 ], [ 1500157080000, 2055, 2057.6, 2058, 2054.3, 25.57670276 ], [ 1500157020000, 2052.8, 2054.9955401, 2055.2, 2051.9, 24.53272347 ], [ 1500156960000, 2053.4, 2053.2, 2053.5, 2052.8, 1.306931 ], [ 1500156900000, 2049.3, 2052.8, 2054, 2049.3, 6.61917221 ], [ 1500156840000, 2048.9, 2049.4, 2049.4, 2046.6, 1.29606497 ], [ 1500156780000, 2053, 2046.8, 2053.2, 2046.8, 12.69946234 ], [ 1500156720000, 2056.3, 2054.1, 2058.3, 2052.7, 43.78514919 ], [ 1500156660000, 2055.3, 2057.8, 2058, 2052.2, 60.36936131 ], [ 1500156600000, 2053.3, 2055.3, 2059.8, 2053.1, 9.93483066 ], [ 1500156540000, 2043.6, 2058.5, 2058.5, 2043.57572604, 40.15689708 ], [ 1500156480000, 2035.4, 2043.5, 2046.5, 2035.4, 30.94043752 ], [ 1500156420000, 2028.9, 2035.2, 2039.8, 2028.9, 24.75357457 ], [ 1500156360000, 2027.9, 2028.8, 2028.8, 2027, 6.76810539 ], [ 1500156300000, 2024.9, 2028, 2028, 2023.9, 46.63302101 ], [ 1500156240000, 2021.5, 2024, 2025.6, 2021.5, 9.81131154 ], [ 1500156180000, 2030.9, 2023.6, 2031, 2022.5, 99.04275051 ], [ 1500156120000, 2028, 2030.9, 2030.9, 2026.67440123, 23.13572439 ], [ 1500156060000, 2033.1, 2028.8, 2034.5, 2028.8, 118.38653001 ], [ 1500156000000, 2033.5, 2033.1, 2034.6, 2033, 126.50116941 ], [ 1500155940000, 2033, 2033, 2034.2, 2033, 1.15005113 ], [ 1500155880000, 2035, 2033, 2037.9, 2033, 6.73203763 ], [ 1500155820000, 2040, 2035.3, 2043.1, 2035.3, 116.30081003 ], [ 1500155760000, 2032.1, 2040, 2040.03558368, 2032.1, 64.09353059 ], [ 1500155700000, 2036.9, 2032.1, 2036.9, 2032.1, 15.56460969 ], [ 1500155640000, 2044, 2035.9, 2046.1, 2035.9, 21.29541685 ], [ 1500155580000, 2056, 2044, 2056, 2044, 42.63603848 ], [ 1500155520000, 2060, 2056, 2060, 2056, 6.48182999 ], [ 1500155460000, 2060, 2060, 2060.2, 2059.7, 32.36917066 ], [ 1500155400000, 2056.1, 2060, 2060.1, 2055, 217.46795998 ], [ 1500155340000, 2056.2, 2056, 2056.2, 2056, 3.73433892 ], [ 1500155280000, 2056.1, 2056.1, 2056.3, 2056, 13.37990461 ], [ 1500155220000, 2055.3, 2056.1, 2056.7, 2055, 11.36517902 ], [ 1500155160000, 2052, 2055.1, 2055.1, 2051.8, 27.46606242 ], [ 1500155100000, 2050.8, 2051.8, 2055, 2050.5, 12.07131499 ], [ 1500155040000, 2048.3, 2050.9, 2050.9, 2046, 76.65404401 ] ]";

            var candles = JsonConvert.DeserializeObject<List<Candle>>(json, new CandlesResultConverter());

            Assert.AreEqual(120, candles.Count);

            var candle = candles[0];

            Assert.AreEqual(1500162180000, candle.MTS);
            Assert.AreEqual(1995.7, candle.Open);
            Assert.AreEqual(1987.2, candle.Close);
            Assert.AreEqual(1995.7, candle.High);
            Assert.AreEqual(1987.2, candle.Low);
            Assert.AreEqual(22.97632724, candle.Volume);
        }

        [TestMethod]
        public void CandlesDeserializeTest2()
        {
            //GET: https://api.bitfinex.com/v2/candles/trade:1m:tBTCUSD/last
            string json = "[ 1500162180000, 1995.7, 1995.7, 1995.7, 1995.7, 1.32939032 ]";

            var candle = JsonConvert.DeserializeObject<Candle>(json, new CandleResultConverter());

            Assert.AreEqual(1500162180000, candle.MTS);
            Assert.AreEqual(1995.7, candle.Open);
            Assert.AreEqual(1995.7, candle.Close);
            Assert.AreEqual(1995.7, candle.High);
            Assert.AreEqual(1995.7, candle.Low);
            Assert.AreEqual(1.32939032, candle.Volume);
        }

        [TestMethod]
        public void CandlesClientSectionLastTest()
        {
            var client = new BitfinexRestClient();
            var candles = client.GetCandles(TimeFrame.Minute, Symbol.BTCUSD, Section.Last);

            Assert.AreEqual(1, candles.Count);
        }

        [TestMethod]
        public void CandlesClientSectionHistoricalTest()
        {
            var client = new BitfinexRestClient();
            var candles = client.GetCandles(TimeFrame.Minute, Symbol.BTCUSD, Section.Historical);

            Assert.IsTrue(candles.Count > 1);
        }
    }
}
